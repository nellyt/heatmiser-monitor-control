#summary One-sentence summary of this page.

= Introduction =

Some python scripts to interact with Heatmiser thermostats.
http://www.heatmiser.co.uk

==Aims==
  * To read data from a set of controllers and present this info
  * Gather some historical data

==Current Features==
  * Web page of current heating status of all controllers
  * Web page of currently programmed times of all controllers
  * Web page of current settings/status of all parameters in all controllers
  * RRD records of all controllers of temeratures
  * Utility to set time in all controllers
  * Graphical timeline of heating status
  * Emailed alarms for error conditions

==Screenshots==
http://heatmiser-monitor-control.googlecode.com/svn/wiki/heating_status.png
http://heatmiser-monitor-control.googlecode.com/svn/wiki/heating_config.png
http://heatmiser-monitor-control.googlecode.com/svn/wiki/heating_times.png
http://heatmiser-monitor-control.googlecode.com/svn/wiki/heattime.png
http://heatmiser-monitor-control.googlecode.com/svn/wiki/heating_times.png
http://heatmiser-monitor-control.googlecode.com/svn/wiki/Study_7day.png

= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages
* 

There seem to be two generations of controllers in the field using what is known as V2 and V3 protocols.
V2 is simpler and has been reverse engineered.
V3 is publicly available at http://www.heatmiser.co.uk/support/admin/attachments/protocolv3system.pdf

This code currently supports only V3

=Other projects/info online=

==Limitations==
  * Currently supports only V3, extension would be quite easy issue #1
  * Display currently only compatible with 5/2 mode

=Hardware=
Controllers use RS485.
I am connected using a USB to RS485 adapter